/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void inorder(TreeNode* root, vector<int>& result) {
       
        if (root == NULL) {
            return;
        }
        stack<TreeNode*> st;
  
        TreeNode* curr = root;
        
        while (!st.empty() || curr) {
            
            if (curr) {
                st.push(curr);
                curr = curr->left;
            }
            else {
                curr = st.top();
                st.pop();
                result.push_back(curr->val);
                curr = curr->right;
            }   
        }
        
        return;        
    }
    
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> result;
        inorder(root, result);
        return result;
    }
};
