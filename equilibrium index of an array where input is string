// C++ program to find equilibrium index of an array
#include <bits/stdc++.h>
using namespace std;

int equilibrium(int a[], int n)
{
    if (n == 1)
        return (0);
    int forward[n];
    int rev[n];
    for (int i = 0; i < n; i++) {
        if (i) {
            forward[i] = forward[i - 1] + a[i];
        }
        else {
            forward[i] = a[i];
        }
    }
    for (int i = n - 1; i > 0; i--) {
        if (i <= n - 2) {
            rev[i] = rev[i + 1] + a[i];
        }
        else {
            rev[i] = a[i];
        }
    }

   if( forward[n-1]- forward[0]==0)
        return 0;
    if( forward[n-2]==0)
        return n-1;
    
    for (int i = 1; i < n; i++) {
        if (forward[i] == rev[i]) {
          //cout<<i<<"hjghj";
            return i;
        }
    }
    return -1;

}

// Driver code
int main()
{
    string s;
    getline(cin, s);
    //cout<<s<<endl;
    int arr[1000001]; 
    bool neg = false;
    int idx = 0;
    //int temp = 0;
    for(int i=0;i<s.size();i++)
    {
        if(s[i] ==' ')    continue;
        if(s[i]=='-')    
        {
            neg = true;
            continue;
        }
        if(s[i]==',')
        {
            //if(neg)    temp = temp*(-1);
            arr[idx] = temp;
            temp = 0;
            neg = false;
            idx++;
            continue;
        }
        temp = (int(s[i])-48);
    }
    int n = 0;
    if(idx>0)
    {
        n = idx+1;
        arr[idx]= temp;
    }
    //int n =  idx;
    //cout<<n<<endl;
    /*for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }*/
   // cout<<endl;
    cout << equilibrium(arr, n) << "\n";
    return 0;
}
