class Solution {
public:
    int search(vector<int>& nums, int target) {
        int pivot=nums.size()-1;
        for(int i=0;i<nums.size()-1;i++){
            if(nums[i]>nums[i+1]){
                pivot=i;
                break;
            }
        }
        if(nums[pivot]==target){
            return pivot;
        }else if( nums[0]<=target && target<nums[pivot] ){
            return binarySearch(nums,0,pivot,target);
        }else{
            return binarySearch(nums,pivot+1,nums.size()-1,target);
        }
        return -1;
    }
    int binarySearch(vector<int>&nums,int left,int right,int target){
        
        if (left<=right){
            int mid=left + (right-left)/2;
            if(nums[mid]==target){
                return mid;
            }
            if(nums[mid]<target){
                return binarySearch(nums,mid+1,right,target);
            }else{
                return binarySearch(nums,left,mid-1,target);
            }
        }
        
        return -1;
    }
};
